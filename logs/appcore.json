Starting DbcommunicationApplication on srivarsha with PID 21606 (started by anusha in /home/anusha/Desktop/Spring Git Practice/GitPratice)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2e4b8173: startup date [Tue Jun 26 18:53:54 IST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cd869b3a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 9090 (http)
Initializing ProtocolHandler ["http-nio-9090"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.31
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1034 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapped "{[/collegeInfo],methods=[POST]}" onto public com.example.dbcommunication.CollegeBean com.example.dbcommunication.controller.CollegerController.collegeInfo(com.example.dbcommunication.CollegeBean)
Mapped "{[/collegeDataUpdate],methods=[POST]}" onto public com.example.dbcommunication.CollegeBean com.example.dbcommunication.controller.CollegerController.collegeDataUpdate(com.example.dbcommunication.CollegeBean) throws org.drucare.core.util.AppServiceException
Mapped "{[/collegeDataUpdateNew],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.CollegerController.fetchDataForDynamicFields(com.example.dbcommunication.CollegeBean) throws org.drucare.core.util.AppServiceException,com.fasterxml.jackson.core.JsonProcessingException
Mapped "{[/responseEntityForUpdateSuccess],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.FacultyController.responseEntityForUpdateSuccess(com.example.dbcommunication.bean.FacultyUpdate)
Mapped "{[/responseEntityForDeleteSuccess],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.FacultyController.responseEntityForDeleteSuccess(com.example.dbcommunication.bean.FacultyDeleteOperation)
Mapped "{[/responseEntityForFetchSuccess],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.FacultyController.responseEntityForFetchSuccess(com.example.dbcommunication.bean.FacultyFetch)
Mapped "{[/insertFacultyDetails],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.FacultyController.insertFacultyDetails(com.example.dbcommunication.bean.FacultyInsert)
Mapped "{[/fetchLabDetails],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.LabController.fetchLabDetails(com.example.dbcommunication.bean.LabBeanReq)
Mapped "{[/studentInfo],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.StudentController.studentInfo(com.example.dbcommunication.bean.StudentBean)
Mapped "{[/details],methods=[POST]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.example.dbcommunication.controller.customerIdController.customerDetails(com.example.dbcommunication.bean.CustomerIdReq)
Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2e4b8173: startup date [Tue Jun 26 18:53:54 IST 2018]; root of context hierarchy
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in globalExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Registering beans for JMX exposure on startup
Starting beans in phase 2147483647
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
Starting ProtocolHandler ["http-nio-9090"]
Failed to start connector [Connector[HTTP/1.1-9090]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-9090]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:265)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:208)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.example.dbcommunication.DbcommunicationApplication.main(DbcommunicationApplication.java:11)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
Pausing ProtocolHandler ["http-nio-9090"]
Stopping service [Tomcat]
The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
Stopping ProtocolHandler ["http-nio-9090"]
Destroying ProtocolHandler ["http-nio-9090"]


***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 9090 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 9090, or configure this application to listen on another port.

Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2e4b8173: startup date [Tue Jun 26 18:53:54 IST 2018]; root of context hierarchy
Stopping beans in phase 2147483647
Unregistering JMX-exposed beans on shutdown
Starting DbcommunicationApplication on srivarsha with PID 21729 (started by anusha in /home/anusha/Desktop/Spring Git Practice/GitPratice)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2e4b8173: startup date [Tue Jun 26 18:55:14 IST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b2bf9395] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 9090 (http)
Initializing ProtocolHandler ["http-nio-9090"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.31
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1001 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapped "{[/collegeInfo],methods=[POST]}" onto public com.example.dbcommunication.CollegeBean com.example.dbcommunication.controller.CollegerController.collegeInfo(com.example.dbcommunication.CollegeBean)
Mapped "{[/collegeDataUpdate],methods=[POST]}" onto public com.example.dbcommunication.CollegeBean com.example.dbcommunication.controller.CollegerController.collegeDataUpdate(com.example.dbcommunication.CollegeBean) throws org.drucare.core.util.AppServiceException
Mapped "{[/collegeDataUpdateNew],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.CollegerController.fetchDataForDynamicFields(com.example.dbcommunication.CollegeBean) throws org.drucare.core.util.AppServiceException,com.fasterxml.jackson.core.JsonProcessingException
Mapped "{[/responseEntityForUpdateSuccess],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.FacultyController.responseEntityForUpdateSuccess(com.example.dbcommunication.bean.FacultyUpdate)
Mapped "{[/responseEntityForDeleteSuccess],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.FacultyController.responseEntityForDeleteSuccess(com.example.dbcommunication.bean.FacultyDeleteOperation)
Mapped "{[/responseEntityForFetchSuccess],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.FacultyController.responseEntityForFetchSuccess(com.example.dbcommunication.bean.FacultyFetch)
Mapped "{[/insertFacultyDetails],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.FacultyController.insertFacultyDetails(com.example.dbcommunication.bean.FacultyInsert)
Mapped "{[/fetchLabDetails],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.LabController.fetchLabDetails(com.example.dbcommunication.bean.LabBeanReq)
Mapped "{[/studentInfo],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.StudentController.studentInfo(com.example.dbcommunication.bean.StudentBean)
Mapped "{[/details],methods=[POST]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.example.dbcommunication.controller.customerIdController.customerDetails(com.example.dbcommunication.bean.CustomerIdReq)
Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2e4b8173: startup date [Tue Jun 26 18:55:14 IST 2018]; root of context hierarchy
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in globalExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Registering beans for JMX exposure on startup
Starting beans in phase 2147483647
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
Starting ProtocolHandler ["http-nio-9090"]
Failed to start connector [Connector[HTTP/1.1-9090]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-9090]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:265)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:208)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)
	at com.example.dbcommunication.DbcommunicationApplication.main(DbcommunicationApplication.java:11)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
Pausing ProtocolHandler ["http-nio-9090"]
Stopping service [Tomcat]
The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
Stopping ProtocolHandler ["http-nio-9090"]
Destroying ProtocolHandler ["http-nio-9090"]


***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 9090 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 9090, or configure this application to listen on another port.

Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2e4b8173: startup date [Tue Jun 26 18:55:14 IST 2018]; root of context hierarchy
Stopping beans in phase 2147483647
Unregistering JMX-exposed beans on shutdown
Starting DbcommunicationApplication on srivarsha with PID 21792 (started by anusha in /home/anusha/Desktop/Spring Git Practice/GitPratice)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2e4b8173: startup date [Tue Jun 26 18:56:13 IST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.6.Final
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bc98a303] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 9090 (http)
Initializing ProtocolHandler ["http-nio-9090"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.31
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 982 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapped "{[/collegeInfo],methods=[POST]}" onto public com.example.dbcommunication.CollegeBean com.example.dbcommunication.controller.CollegerController.collegeInfo(com.example.dbcommunication.CollegeBean)
Mapped "{[/collegeDataUpdate],methods=[POST]}" onto public com.example.dbcommunication.CollegeBean com.example.dbcommunication.controller.CollegerController.collegeDataUpdate(com.example.dbcommunication.CollegeBean) throws org.drucare.core.util.AppServiceException
Mapped "{[/collegeDataUpdateNew],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.CollegerController.fetchDataForDynamicFields(com.example.dbcommunication.CollegeBean) throws org.drucare.core.util.AppServiceException,com.fasterxml.jackson.core.JsonProcessingException
Mapped "{[/responseEntityForUpdateSuccess],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.FacultyController.responseEntityForUpdateSuccess(com.example.dbcommunication.bean.FacultyUpdate)
Mapped "{[/responseEntityForDeleteSuccess],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.FacultyController.responseEntityForDeleteSuccess(com.example.dbcommunication.bean.FacultyDeleteOperation)
Mapped "{[/responseEntityForFetchSuccess],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.FacultyController.responseEntityForFetchSuccess(com.example.dbcommunication.bean.FacultyFetch)
Mapped "{[/insertFacultyDetails],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.FacultyController.insertFacultyDetails(com.example.dbcommunication.bean.FacultyInsert)
Mapped "{[/fetchLabDetails],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.LabController.fetchLabDetails(com.example.dbcommunication.bean.LabBeanReq)
Mapped "{[/studentInfo],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.drucare.core.util.ResponseMapper> com.example.dbcommunication.controller.StudentController.studentInfo(com.example.dbcommunication.bean.StudentBean)
Mapped "{[/details],methods=[POST]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.example.dbcommunication.controller.customerIdController.customerDetails(com.example.dbcommunication.bean.CustomerIdReq)
Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2e4b8173: startup date [Tue Jun 26 18:56:13 IST 2018]; root of context hierarchy
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in globalExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Registering beans for JMX exposure on startup
Starting beans in phase 2147483647
Context refreshed
Found 1 custom documentation plugin(s)
Scanning for api listing references
Starting ProtocolHandler ["http-nio-9090"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 9090 (http)
Started DbcommunicationApplication in 2.29 seconds (JVM running for 2.931)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 10 ms
